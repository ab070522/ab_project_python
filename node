class Node:
    def __init__(self, data, link=None):
        self.data = data
        self.link = link

#node 관리하는 클래스
class MyList:
    def __init__(self, *datas):
        self.length = 0
        self.head = None
        self.tail = None

        for data in datas:
            self.append(data)

    #node를 생성하여 연결
    def append(self, data):
        node = Node(data)

        if self.head is None:
            self.head = node
            self.tail = node
        #저장된 데이터가 있는 경우
        else:
            self.tail.link = node
            self.tail = node

        self.length += 1

    #예쁘게 만들기
    def __str__(self):
        result = "<"
        curr = self.head

        while curr is not None:
            result += str(curr.data)
            if curr.link is not None:
                result += ", "
            curr = curr.link

        result += ">"
        return result
    
    # 객체를 iterable 하게 만듬
    def __iter__(self):
        def generate():
            curr = self.head
            while curr is not None:
                yield curr.data
                curr = curr.link
        return generate()
    
    #내장함수 len 호출시 동작 구현
    def __len__(self):
        return self.length

My_List = MyList(1, 2, "123")
for item in My_List:
    print(My_List)
